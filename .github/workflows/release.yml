---
name: release

on:
  pull_request:
    types: [closed]
    branches: ["main", "main-*"]

jobs:
  release:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get release version
        id: get_version
        if: contains(github.event.pull_request.labels.*.name, 'kind/release')
        run: |
          VERSION=$( echo "${{ github.event.pull_request.title }}" | grep -oE '[[:digit:]]+.[[:digit:]]+.[[:digit:]]')
          if [[ -n $VERSION ]]; then
            echo "::set-output name=version::$VERSION"
          fi

      - name: Not version added
        if: ${{ !steps.get_version.outputs.version }}
        run: |
          echo "::error No version added"
      - name: Create Release
        if: contains(github.event.pull_request.labels.*.name, 'kind/release') && ${{ steps.get_version.outputs.version }}
        uses: actions/create-release@v1.1.4
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: ${{ steps.get_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: develop

      - name: Set changes in develop branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          git fetch --unshallow
          git checkout develop
          git pull
          git merge --no-ff master -m "Auto-merge main back to develop"
          git push
